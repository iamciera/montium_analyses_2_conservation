output_chr2L[i,2] <- chr2L[i,4] + 1 #left Range
output_chr2L[i,3] <- chr2L[i+1,5] - 1 #right Range
output_chr2L[i,4] <- as.character(chr2L[i,9])#left Gene
output_chr2L[i,5] <- as.character(chr2L[i+1,9])#right Gene
}
for(i in 1:nrow(chr2R)){
output_chr2R[i,1] <- as.character(chr2R[i,1]) #chr
output_chr2R[i,2] <- chr2R[i,4] + 1 #left Range
output_chr2R[i,3] <- chr2R[i+1,5] - 1 #right Range
output_chr2R[i,4] <- as.character(chr2R[i,9])#left Gene
output_chr2R[i,5] <- as.character(chr2R[i+1,9])#right Gene
}
output_allChr <- rbind(output_chrY, output_chrX, output_chr4, output_chr3L, output_chr2R, output_chr2L)
head(output_allChr,50)
levels(as.factor(output_allChr$X1))
tail(output_allChr)
output_allChr$size <- output_allChr$X3 - output_allChr$X2
head(output_allChr)
## All the sizes
ggplot(output_allChr, aes(X1, size)) +
geom_violin()  +
scale_y_continuous(name="size in BP", labels = scales::comma) +
scale_x_discrete(name="chromosome") +
theme_bw() +
theme(text = element_text(size = 25))
# clean up and output bedfile file
# remove rows with NA
output_allChr <- na.omit(output_allChr)
cols <- c("X4", "X5")
output_allChr$name <- apply( output_allChr[ , cols ] , 1 , paste , collapse = " to " )
head(output_allChr)
outputBED <- output_allChr[,c(1,2,3,7)]
head(outputBED)
outputBED$name <- gsub(" to ", "-to-", outputBED$name)
head(outputBED)
outputBED <- output_allChr[,c(1,2,3,7)]
head(outputBED)
outputBED$name <- gsub(" to ", "_to_", outputBED$name)
head(outputBED)
outputBED$score <- "score"
outputBED$strand <- "+"
head(outputBED)
write.table(outputBED,"./cleanedFlybaseBetweenGenes_17July2017.BED",col.names=F,row.names=F,sep="\t",quote=F)
setwd("~/Dropbox/Research2/montium_analyses_1_alignment/analyses_1_alignment/pipeline_output_8/0.preparing_regions/geneModels_flybase")
inter_regions_bed <- read.table("../../cleanedFlybaseBetweenGenes_17July2017.BED")
head(inter_regions_bed)
library(GenomicRanges)
library(rtracklayer)
?commandArgs
b <- import.bed(inter_regions_bed)
b <- import.bed("../../cleanedFlybaseBetweenGenes_17July2017.BED")
?import.bed
b <- import.bed("../../", "cleanedFlybaseBetweenGenes_17July2017.BED")
head(b)
ls
b
b
b <- import.bed("../../0.preparing_regions/geneModels_flybase/", "cleanedFlybaseBetweenGenes_15Nov2016.BED")
b
head(inter_regions_bed)
b <- import("../../cleanedFlybaseBetweenGenes_17July2017.BED", format="bed")
head(inter_regions_bed)
inter_regions_bed <- inter_regions_bed[,c(1,2,3,6,4,5)]
write.table(inter_regions_bed, "../../rearrange_cleanedFlybaseBetweenGenes_17July2017.BEDcol.names=F,row.names=F,sep="\t",quote=F)
write.table(inter_regions_bed, "../../rearrange_cleanedFlybaseBetweenGenes_17July2017.BED", col.names=F,row.names=F,sep="\t",quote=F)
inter_regions_bed <- read.table("../../rearrange_cleanedFlybaseBetweenGenes_17July2017.BED")
b <- import("../../rearrange_cleanedFlybaseBetweenGenes_17July2017.BED", format="bed")
colnames(inter_regions_bed) <- c("seqnames", "starts", "ends", "names", "scores", "strands")
head(inter_regions_bed)
inter_regions_bed <- read.table("../../cleanedFlybaseBetweenGenes_17July2017.BED")
inter_regions_bed <- inter_regions_bed[,c(1,2,3,6,4,5)]
colnames(inter_regions_bed) <- c("seqnames", "starts", "ends", "names", "scores", "strands")
head(inter_regions_bed)
inter_regions_bed <- read.table("../../cleanedFlybaseBetweenGenes_17July2017.BED")
head(inter_regions_bed)
colnames(inter_regions_bed) <- c("seqnames", "starts", "ends", "names", "scores", "strands")
head(inter_regions_bed)
b <- import("../../cleanedFlybaseBetweenGenes_17July2017.BED", format="bed")
inter_regions_bed$scores <- 0
head(inter_regions_bed)
write.table(inter_regions_bed, "../../rearrange_cleanedFlybaseBetweenGenes_17July2017.BED", col.names=F,row.names=F,sep="\t",quote=F)
b <- import("../../cleanedFlybaseBetweenGenes_17July2017.BED", format="bed")
b <- import("../../rearrange_cleanedFlybaseBetweenGenes_17July2017.BED", format="bed")
b
l <- sum(width(b))
l
positions <- sample(c(1:l), 500)
positions
width(b)
new_b <- GRanges(seqnames=as.character(rep(seqnames(b), width(b))),
ranges=IRanges(start=unlist(mapply(seq, from=start(b), to=end(b))), width=1))
l <- sum(width(b))
positions <- sample(c(1:l), 5)
new_b <- GRanges(seqnames=as.character(rep(seqnames(b), width(b))),
ranges=IRanges(start=unlist(mapply(seq, from=start(b), to=end(b))), width=1))
new_b
sheet1 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 1)
library(xlsx)
RME1027 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
EL_RME1027 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
EL_RME1028 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 2)
## Check Sheet 1
head(EL_RME1028)
dim(EL_RME1028)
duplicated(EL_RME1028)
EL_RME1512 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 3)
EL_RME1027 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 1)
setwd("~/git.repos/alli_data/R")
EL_RME1027 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 1)
## Check
head(EL_RME1027)
dim(EL_RME1027)
duplicated(EL_RME1027)
EL_RME1028 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 2)
############## EL_RME1028
head(EL_RME1028)
dim(EL_RME1028)
duplicated(EL_RME1028)
############## EL_RME1512
EL_RME1512 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 3)
## Check Sheet 1
head(EL_RME1512)
dim(EL_RME1512)
duplicated(EL_RME1512)
EL_RME1511 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 4)
head(EL_RME1511)
dim(EL_RME1511)
duplicated(EL_RME1511)
gcms_no_repeats <- read.xlsx("../data/raw/gcms_vals_norepeats.xlsx",
sheetIndex = 1)
gcms_norm <- read.xlsx("../data/raw/gcms_vals_normalized_norepeats.xlsx",
sheetIndex = 1)
gcms_norm <- read.xlsx("../data/raw/gcms_vals_normalized_norepeats.xlsx",
sheetIndex = 1)
```{r}
############## egglay_liqagar_72hr_rawdata_formodel.xlsx
############## EL_RME1027
EL_RME1027 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 1)
## Check
head(EL_RME1027)
dim(EL_RME1027)
duplicated(EL_RME1027)
############## EL_RME1028
EL_RME1028 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 2)
head(EL_RME1028)
dim(EL_RME1028)
duplicated(EL_RME1028)
############## EL_RME1512
EL_RME1512 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 3)
## Check
head(EL_RME1512)
dim(EL_RME1512)
duplicated(EL_RME1512)
############## EL_RME1511
EL_RME1511 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 4)
head(EL_RME1511)
dim(EL_RME1511)
duplicated(EL_RME1511)
########## EL_RME1553
EL_RME1553 <- read.xlsx("../data/raw/egglay_liqagar_72hr_rawdata_formodel.xlsx",
sheetIndex = 5)
head(EL_RME1553)
dim(EL_RME1553)
duplicated(EL_RME1553)
############## gcms_vals_norepeats.xlsx
############## gcms_no_repeats
gcms_no_repeats <- read.xlsx("../data/raw/gcms_vals_norepeats.xlsx",
sheetIndex = 1)
## Check
head(gcms_no_repeats)
dim(gcms_no_repeats)
duplicated(gcms_no_repeats)
############## gcms_vals_normalized_norepeats.xlsx
############## gcms_norm
gcms_norm <- read.xlsx("../data/raw/gcms_vals_normalized_norepeats.xlsx",
sheetIndex = 1)
## Check
head(gcms_no_repeats)
dim(gcms_no_repeats)
duplicated(gcms_no_repeats)
View(EL_RME1027)
View(EL_RME1027)
egg_lay <- rbind(EL_RME1553, EL_RME1511, EL_RME1512, EL_RME1028, EL_RME1027)
head(egg_lay)
dim(egg_lay)
summary(egg_lay)
View(egg_lay)
df$Date <- as.Date(df$Date , "%y-%d-%m")
egg_lay$Date <- as.Date(egg_lay$Date , "%y-%d-%m")
View(gcms_norm)
summary(gcms_norm)
gcms_norm$peak_pos <- as.factor(gcms_norm$peak_pos)
summary(gcms_norm)
summary(gcms_norm)
gcms_norm$peak_pos
gcms_norm$peak_pos
head(gcms_norm$peak_pos)
head(gcms_norm)
gcms_melt <- melt(gcms_norm, id.vars = "peak_pos",
variable.name = "yeast")
library(lme4)
gcms_melt <- melt(gcms_norm, id.vars = "peak_pos",
variable.name = "yeast")
library(reshape2)
gcms_melt <- melt(gcms_norm, id.vars = "peak_pos",
variable.name = "yeast")
gcms_melt
gcms_cast <- dcast(gcms_melt, yeast ~ peak_pos, value.var = "value")
gcms_cast
dim(gcms_cast)
gcms_norm <- gcms_cast
gcms_norm
View(egg_lay)
gcms_melt <- melt(gcms_norm, id.vars = "peak_pos",
variable.name = "Yeast")
gcms_cast <- dcast(gcms_melt, yeast ~ peak_pos, value.var = "value")
# Check
dim(gcms_cast)
# rename back to original
gcms_norm <- gcms_cast
all_data <- merge(gcms_norm, egg_lay, by = "Yeast")
colnames(gcms_norm)
head(gcms_norm)
# Add all EL sheets
egg_lay <- rbind(EL_RME1553, EL_RME1511, EL_RME1512, EL_RME1028, EL_RME1027)
head(egg_lay)
dim(egg_lay)
summary(egg_lay)
#make date column be date
egg_lay$Date <- as.Date(egg_lay$Date , "%y-%d-%m")
```
## GCMS
```{r}
head(gcms_norm)
# make peak a factor
gcms_norm$peak_pos <- as.factor(gcms_norm$peak_pos)
# Transform - first melt the Yeast columns from wide to long
gcms_melt <- melt(gcms_norm, id.vars = "peak_pos",
variable.name = "Yeast")
# Transform - compound components from long to wid
gcms_cast <- dcast(gcms_melt, yeast ~ peak_pos, value.var = "value")
# Check
dim(gcms_cast)
# rename back to original
gcms_norm <- gcms_cast
# Merge both data types
colnames(gcms_norm)
colnames()
all_data <- merge(gcms_norm, egg_lay, by = "Yeast")
colnames(gcms_norm)
colnames(gcms_norm)[1] <- "Yeast"
colnames(egg_lay)
all_data <- merge(gcms_norm, egg_lay, by = "Yeast")
head(all)
head(all_data)
dim(gcms_cast)
View(all_data)
all_data <- merge(egg_lay, gcms_norm, by = "Yeast")
head(all_data)
dim(all_data)
dim(egg_lay)
dim(gcms_norm)
dim(egg_lay)
dim(all_data)
write.csv(sheet123, "../data/output/combinedData_17July2017.csv")
write.csv(all_data, "../data/output/combinedData_17July2017.csv")
aq_DF <- read.csv("../data/output/combinedData_17July2017.csv", row.names = 1)
dim(aq_DF)
summary(aq_DF)
str(aq_DF)
# Im'm going to force all into num
colnames(aq_DF)
aq_DF[,12:53] <- apply(aq_DF[,12:53], 2, function(x) as.numeric(as.character(x)))
ggplot(aq_DF, aes(aq_DF$CTL)) +
geom_histogram()
library(ggplot2)
ggplot(aq_DF, aes(aq_DF$CTL)) +
geom_histogram()
ggplot(aq_DF, aes(aq_DF$CTL)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram(bins = 1) +
theme_bw()
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram() +
stat_bin(binwidth = 1)
theme_bw()
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram() +
stat_bin(binwidth = 1) +
theme_bw()
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram() +
stat_bin(binwidth = 50) +
theme_bw()
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram() +
stat_bin(binwidth = 1) +
theme_bw()
colnames(aq_DF)
ggplot(aq_DF, aes(aq_DF$eggs.fly)) +
geom_histogram() +
stat_bin(binwidth = 1) +
theme_bw()
ggplot(aq_DF, aes(aq_DF$OI)) +
geom_histogram() +
stat_bin(binwidth = 1) +
theme_bw()
ggplot(aq_DF, aes(aq_DF$OI)) +
geom_histogram() +
theme_bw()
summary(aq_DF)
qqnorm(aq_DF$CTL)
qqline(aq_DF$CTL)
qqnorm(aq_DF$Exp)
qqline(aq_DF$Exp)
qqnorm(aq_DF$eggs.fly)
qqline(aq_DF$eggs.fly)
qqnorm(aq_DF$OI)
qqline(aq_DF$OI)
colnames(aq_DF)
colnames(aq_DF)
ggplot(aq_DF, aes(aq_DF$OI)) +
geom_histogram() +
theme_bw()
qqnorm(aq_DF$OI)
qqline(aq_DF$OI)
qqnorm(aq_DF$OI)
qqline(aq_DF$OI)
ggplot(aq_DF, aes(aq_DF$OI)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X47)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X75)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X75, color = Yeast)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X75, fill = Yeast)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, fill = Yeast)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, fill = Yeast)) +
geom_histogram() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI)) +
geom_violin() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, fill = Yeast)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, color = Yeast)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, color = line)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, color = Line)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, color = Line)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, color = Line)) +
geom_point() +
theme_bw()
ggplot(aq_DF, aes(aq_DF$CTL)) +
geom_histogram() +
theme_bw()
qqnorm(aq_DF$CTL)
qqline(aq_DF$CTL)
ggplot(aq_DF, aes(aq_DF$Exp)) +
geom_histogram() +
stat_bin(binwidth = 1) +
theme_bw()
ggplot(aq_DF, aes(aq_DF$X101, aq_DF$OI, color = Line)) +
geom_point() +
theme_bw()
plot(aq_DF)
plot(aq_DF)
plot(aq_DF)
setwd("~/Dropbox/Research2/montium_analyses_2_conservation/r")
2. see what else in terms of information / data I need to collect.
### Set up
```{r}
## Libraries
library(ggplot2)
TFBS_df <- read.table("../data/outputs/TFBS_map_DF_all_bicoid_test.csv", sep = "\t", header = TRUE)
head(TFBS_df)
#remove NAs
TFBS_df <- TFBS_df[,-1]
TFBS_df <- TFBS_df[complete.cases(TFBS_df), ]
## as.factor species
TFBS_df$species <- as.factor(TFBS_df$species)
dim(TFBS_df)
str(TFBS_df)
```
### Visualization
```{r}
ggplot(TFBS_df, aes(align_position, fill=species, alpha = .5)) +
geom_bar(stat = "count") +
#scale_x_continuous(limits = c(100, 350)) +
facet_grid(strand~.) +
theme_bw()
library(ggplot2)
TFBS_df <- read.table("../data/outputs/TFBS_map_DF_all_bicoid_test.csv", sep = "\t", header = TRUE)
head(TFBS_df)
TFBS_df <- TFBS_df[,-1]
#remove NAs
TFBS_df <- TFBS_df[complete.cases(TFBS_df), ]
## as.factor species
TFBS_df$species <- as.factor(TFBS_df$species)
dim(TFBS_df)
str(TFBS_df)
```
### Visualization
```{r}
ggplot(TFBS_df, aes(align_position, fill=species, alpha = .5)) +
geom_bar(stat = "count") +
#scale_x_continuous(limits = c(100, 350)) +
facet_grid(strand~.) +
theme_bw()
ggplot(TFBS_df, aes(align_position,species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
theme_bw() +
theme(text = element_text(size = 20))
ggplot(TFBS_df, aes(align_position,species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
theme_bw() +
theme(text = element_text(size = 20))
ggplot(TFBS_df, aes(align_position,species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
theme_bw() +
theme(text = element_text(size = 20))
ggplot(TFBS_df, aes(align_position,species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
theme_bw() +
theme(text = element_text(size = 20))
TFBS_df$species <- as.factor(TFBS_df$species)
dim(TFBS_df)
str(TFBS_df)
library(ggplot2)
TFBS_df <- read.table("../data/outputs/TFBS_map_DF_all_bicoid_test.csv", sep = "\t", header = TRUE)
head(TFBS_df)
TFBS_df <- TFBS_df[,-1]
#remove NAs
TFBS_df <- TFBS_df[complete.cases(TFBS_df), ]
## as.factor species
TFBS_df$species <- as.factor(TFBS_df$species)
dim(TFBS_df)
str(TFBS_df)
```
### Visualization
```{r}
ggplot(TFBS_df, aes(align_position, fill=species, alpha = .5)) +
geom_bar(stat = "count") +
#scale_x_continuous(limits = c(100, 350)) +
facet_grid(strand~.) +
theme_bw()
ggplot(TFBS_df, aes(align_position,species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
theme_bw() +
theme(text = element_text(size = 20))
ggplot(TFBS_df, aes(align_position, species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
theme_bw() +
theme(text = element_text(size = 20))
ggplot(TFBS_df, aes(align_position, species, alpha = .8, size = score)) +
geom_point() +
#scale_x_continuous(limits = c(290, 330)) +
facet_grid(strand~.) +
#theme_bw() +
theme(text = element_text(size = 20))
